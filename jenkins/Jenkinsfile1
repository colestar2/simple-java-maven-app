pipeline { 
    agent any 
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Build') { 
            agent {
                docker {
                    image 'maven:3.8.1-openjdk-11'
                    args '-v /root/.m2:/root/.m2' // Maven 로컬 저장소를 공유하여 의존성 캐시를 활용
                }
            }
            steps { 
                sh 'mvn clean install' // Maven 빌드 명령어 실행
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'maven:3.8.1-openjdk-11'
                    args '-v /root/.m2:/root/.m2' // Maven 로컬 저장소를 공유하여 의존성 캐시를 활용
                }
            }
            steps {
                sh 'mvn test' // Maven 테스트 명령어 실행
                junit 'target/surefire-reports/**/*.xml' // 테스트 결과를 JUnit 형식으로 보고
            }
        }
        stage('Deploy') {
            agent {
                docker {
                    image 'maven:3.8.1-openjdk-11'
                    args '-v /root/.m2:/root/.m2' // Maven 로컬 저장소를 공유하여 의존성 캐시를 활용
                }
            }
            when {
                branch 'main' // 메인 브랜치에만 배포
            }
            steps {
                sh 'mvn deploy' // Maven 배포 명령어 실행
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'target/*.jar', allowEmptyArchive: true // 빌드 아티팩트를 아카이브
        }
    }
}

